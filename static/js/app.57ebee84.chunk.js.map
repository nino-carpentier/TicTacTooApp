{"version":3,"sources":["App.tsx","web-build/register-service-worker.js"],"names":["Row","props","style","flexDirection","width","justifyContent","children","Cell","symbol","backgroundColor","minWidth","Pipe","Caret","Grid","onPress","tab","App","useState","setTab","gamer","setGamer","styles","container","x","y","copyTab","StyleSheet","create","flex","alignItems","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.57ebee84.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextProps } from 'react-native';\n\nfunction Row(props: { children: React.ReactNode }) {\n  return <View style={{ flexDirection: 'row', width: 100, justifyContent: 'space-around' }}>{props.children}</View>\n}\ntype CellProps = { symbol: Symbol } & TextProps\nfunction Cell({ symbol, ...props }: CellProps) {\n  return <Text style={{ backgroundColor: symbol === ' ' ? '#ccc' : 'transparent', minWidth: 10 }} {...props}>{symbol}</Text>;\n}\nfunction Pipe() {\n  return <Text>{'|'}</Text>;\n}\nfunction Caret() {\n  return <Text>{'-'}</Text>;\n}\n\ntype Status = 'o_gagne' | 'x_gagne' | 'pas-fini' | 'plein'\n\nconst Circle = 'o'\nconst Cross = 'x'\nconst Empty = ' '\ntype Symbol = typeof Circle | typeof Cross | typeof Empty\ntype GridProps = { tab: Symbol[][], onPress(x: number, y: number): void }\nfunction Grid(props: GridProps) {\n  return (\n    <View>\n      <Row>\n        <Cell onPress={() => props.onPress(0, 0)} symbol={props.tab[0][0]} />\n        <Pipe />\n        <Cell onPress={() => props.onPress(0, 1)} symbol={props.tab[0][1]} />\n        <Pipe />\n        <Cell onPress={() => props.onPress(0, 2)} symbol={props.tab[0][2]} />\n      </Row>\n      <Row>\n        <Caret />\n        <Pipe />\n        <Caret />\n        <Pipe />\n        <Caret />\n      </Row>\n      <Row>\n        <Cell onPress={() => props.onPress(1, 0)} symbol={props.tab[1][0]} />\n        <Pipe />\n        <Cell  onPress={() => props.onPress(1, 1)} symbol={props.tab[1][1]} />\n        <Pipe />\n        <Cell  onPress={() => props.onPress(1, 2)} symbol={props.tab[1][2]} />\n      </Row>\n      <Row>\n        <Caret />\n        <Pipe />\n        <Caret />\n        <Pipe />\n        <Caret />\n      </Row>\n      <Row>\n        <Cell  onPress={() => props.onPress(2, 0)} symbol={props.tab[2][0]} />\n        <Pipe />\n        <Cell  onPress={() => props.onPress(2, 1)} symbol={props.tab[2][1]} />\n        <Pipe />\n        <Cell  onPress={() => props.onPress(2, 2)} symbol={props.tab[2][2]} />\n      </Row>\n    </View>\n  );\n}\n\n\n\nexport default function App() {\n  const [tab, setTab]  = useState<Symbol[][]>([\n    [Empty, Empty, Empty],\n    [Empty, Empty, Empty],\n    [Empty, Empty, Empty]\n  ]);\n\n  const [gamer, setGamer] = useState<typeof Cross | typeof Circle>(Cross)\n\n  const onPress = (x: number, y: number) => {\n    const copyTab = tab;\n    copyTab[x][y] = gamer;\n    setTab([copyTab[0], copyTab[1], copyTab[2]]);\n    if (gamer === Cross) {\n      setGamer(Circle)\n    } else {\n      setGamer(Cross)\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Grid tab={tab} onPress={onPress}/>\n      <Text>{\"\\n√Ä qui le tour ?\"}</Text>\n      <Text>{gamer}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}